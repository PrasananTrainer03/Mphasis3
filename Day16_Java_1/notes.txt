

Object Oriented Programming : 
______________________________

	It is an approach that provides a way of modularizing programming, that which can be 
used to create small partition memory area for both data and objects, which are to be used as 
templates for creating copies of such modules on demand. 

Object : 
________

	An object is a real world entity, that which possess 3 characterstics
	known as 

			(i) State

			(ii) Behaviour

			(iii) Identity 


OOPS features : 
_________________


	(i) Encapsulation

		Wrapping up of data and functions into a single unit known as
			encapsualtion. 

	(ii) Abstraction : 

		Hiding the irrelevant details of an object, that do not contribute to its essential
			characterstics. 

		*** Encapsulation focuses on showing the relevant details, where abstraction focuses
			on hiding the irrelevant details ***

	(iii) Inheritance : The concept of deriving a new entity from already existing entity known as 
		inheritance, through inheritance we can reduce the size of the program. 

	(iv) Polymorphism : The ability to take more than one form known as polymorphism. 

class : A class is a template or blueprint, that which contains combination of data members and member
	functions. Members of the class can be accessable by using instance of the class. 


class class_name
{
     data members;
     member functions;
}

Why Java : 
__________


(i) Platform Independence : Write Once and run anywhere. 

(ii) Console Apps, Windows Apps, Web Apps 

(iii) Packages : Contains group of classes that which belongs to one common group. If you want to overcome the naming conflicts between classes, then we need the help of pacakges. 


Java Features : 
_________________


1) Simple : Java uses simple C/C++ syntaxes, as a programmer no needs to take 
care of internal details like memory management etc... as how much memory allocated
to run the program, the same amount of memory will be reallocated automatically. 

2) Object Oriented :
	
	Java supports all object oriented programming features. 

3) Compiled and Interpreted

	Java programs are compiled first, during compilation java code will be converted into bytecode, 
	then .class file will be created. In interpretation, it reads the bytecode line by line 
	and executes. 

4) Portable : Ability to run the program without changing the source code, java programs are programs that can run on any env, without changing the source code. 

5) Securable : Java implements various levels of security as 

		(i) Compiler Level

		(ii) Bytecode Level

		(iii) Class Loder Level

6) Distributed : By using java, we can implement all distributed and robust applications. 

Java Architecture : 
____________________


	1) Java Program 

		Java code, that which stored with extension .java

	2) Java Class

		Java code after compilation, its converted into bytecode then .class file will be created. 

	3) JVM (Java Virtual Machine)
	
		It contains various components as

		  (i) Class Loader  : Used to load all classes which are required to run the program. 

			There are 2 types of class loaders known as 

			(a) Primordial Class Loader

				Used to load all system classes, which are required to run the program.

			(b) Class Loader Objects 

				Used to load all custom classes which are required to run the program. 

		 (ii) JIT Compiler (Just In Time)

			Used to convert bytecode into CPU specific format. 

		(iii) Execution Manager :

			Contains QUEUE of programs which are ready to run, where we can execute the program.
		*** Before execution, it needs to undergone security authentication ***

	4) Java API 

		It provides runtime env, that which allows you to run the java program.

Access Modifiers :
___________________


	(i) private : Allows you to access members within current class. 

	(ii) public : Allows you to access members in entire application. 

	(iii) protected : Allows you to access members within current/derived class. 

	(iv) friendly : By default java possess friendly access modifier, allows you to access members
		within all classes of current pacakge. 


Data Types : 
____________

There are various data types as

	(i) Value Types

		int, float, double, char, booolean

	(ii) Reference Types 

		String, Object and Custom Types. 


You can define method main() as 

public static void main(String[] args) {
...
...
...
}

main() must be static as no class object supposed to call method main(). 

Output Statement : 

System.out.println() : used to display any value or message. 

System.out.println("Welcome to Java Programming...");

You can create an object to the class, as 

class_name obj = new class_name();

Control Structures : 
___________________

used to define the flow of the program. 

	There are 2 types of control structures known as

		(i) Branching

			if...else : Executes the statements based on the condition. 
			
			if (condition) {
				statement(s);
			} else {
				statement(s);
			}



		switch...case : Used to define the menu-driven programs. 

		switch(expr) {
			case expr1 : 
				statement(s);
				break;
			case expr2 : 
				statement(s);
				break;
			case expr3 : 
				statement(s);
				break;
			...
			...
			...
		}

		(ii) Looping 

		   while loop : 
			
			This loop executes all the statements repeatedly until the condition remains true, 
		if the condition remains false, then it comes out of the loop. 
		For every loop, basically there are 3 phases as

			(a) Initialization

				Initialization performed at the beginning of the loop.

			(b) condition

				Performed at the conditional part of the loop.

			(c) Increment/Decrement 
		
				Performed before closing the loop. 

		while(condition) {
			statement(s);
		}


		for loop : Executes the statmeents till the condition remains true. 

		for(initialization;condition;increment/decrement) {
			...
			...
			...
		}


































